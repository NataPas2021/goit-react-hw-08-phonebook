{"version":3,"file":"static/js/592.1b2d514e.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","Pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"block\":\"RegisterForm_block__9f3Q-\",\"label\":\"RegisterForm_label__4pTXF\"};","import { useState, useId } from \"react\";\nimport css from \"./RegisterForm.module.css\";\n\nconst INITIAL_STATE = {\n    name: \"\",\n    email: \"\",\n    password: \"\"\n}\n\nconst RegisterForm = ({ onSubmit }) => {\n   const [state, setState] = useState({ ...INITIAL_STATE });\n\n  const handleChange = (e) => {\n    const {name, value} = e.target;\n  \n    setState({\n        ...state,\n        [name]: value,\n    })\n }\n\n  const handleSubmit = (e, data) => { \n    e.preventDefault();\n    onSubmit({ ...state });\n    reset();\n};\n\n  const reset = () => {\n    setState({...INITIAL_STATE});\n}\n\n\n    const inputNameId = useId();\n    const inputEmailId = useId();\n    const inputPasswordID = useId();\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className={css.block}>\n              <label htmlFor={inputNameId} className={css.label}>Name</label>\n              <input className={css.input}\n                 type=\"text\"\n                 name=\"name\"\n                 value={state.name}\n                 id={inputNameId}\n                 onChange={handleChange}\n                 pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                 title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                 required/>  \n            </div>\n            <div className={css.block}>\n              <label htmlFor={inputEmailId} className={css.label}>Email</label>\n              <input className={css.input}\n                 type=\"email\"\n                 name=\"email\"\n                 value={state.email}\n                 id={inputEmailId}\n                 onChange={handleChange}\n                 pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                 title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                 required/>\n            </div>\n            <div className={css.block}>\n                <label htmlFor={inputPasswordID} className={css.label}>Password</label>\n                <input className={css.input}\n                 type=\"password\"\n                 name=\"password\"\n                 value={state.password}\n                 id={inputPasswordID}\n                 onChange={handleChange}\n                 pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                 title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                 required/>\n            </div>  \n            <button type=\"submit\">Register</button>\n        </form>\n    )\n}\n\nexport default RegisterForm;","import { useSelector, useDispatch } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport RegisterForm from \"components/RegisterForm/RegisterForm\";\nimport { signup } from \"../../redux/auth/auth-operations\";\nimport { selectAuthLoading, selectAuthError, selectIsLogin } from \"../../redux/auth/auth-selectors\";\n\nconst RegisterPage = () => {\n    const authLoading = useSelector(selectAuthLoading);\n    const authError = useSelector(selectAuthError);\n    const isLogin = useSelector(selectIsLogin);\n\n    const dispatch = useDispatch();\n\n    const handleSignUp = data => {\n        dispatch(signup(data));\n    }\n\n    if (isLogin) {\n        return <Navigate to='/my-contacts' />\n    }\n    return (\n        <>\n            <p>Please Sign Up</p>\n            {authLoading && <p>...Loading</p>}\n            <RegisterForm onSubmit={handleSignUp} />\n            {authError && <p style={{ color: \"red\" }}>{authError}</p>}\n        </>\n    )\n}\n\nexport default RegisterPage;"],"names":["INITIAL_STATE","name","email","password","_ref","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handleChange","e","_e$target","target","value","_defineProperty","reset","inputNameId","useId","inputEmailId","inputPasswordID","_jsxs","data","preventDefault","children","className","css","_jsx","htmlFor","type","id","onChange","pattern","title","required","authLoading","useSelector","selectAuthLoading","authError","selectAuthError","isLogin","selectIsLogin","dispatch","useDispatch","Navigate","to","_Fragment","RegisterForm","signup","style","color"],"sourceRoot":""}