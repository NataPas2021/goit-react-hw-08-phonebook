{"version":3,"file":"static/js/985.c033015f.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/ContactsList.module.css?7ecc","redux/contacts/contacts-selectors.js","components/Contacts/ContactsList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/MyContacts/MyContacts.module.css?73b2","components/MyContacts/MyContacts.jsx","Pages/MyContactsPage/MyContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"label\":\"Form_label__8nx+5\",\"input\":\"Form_input__FTtTw\",\"addButton\":\"Form_addButton__fjEsU\"};","import { useState, useId } from 'react';\n\nimport css from './Form.module.css';\nimport { addContact } from '../../redux/contacts/contacts-operations';\nimport { useDispatch } from 'react-redux';\n\n\nconst INITIAL_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nconst Form  = () => {\n  const [state, setState] = useState({...INITIAL_STATE});\n\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    const {name, value} = e.target;\n  \n    setState({\n        ...state,\n        [name]: value,\n    })\n }\n\n  const handleSubmit = (e, data) => { \n    e.preventDefault();\n    dispatch(addContact(state));\n    reset();\n    \n};\n\n  const reset = () => {\n    setState({...INITIAL_STATE});\n}\n\n  const inputNameId = useId();\n  const inputNumberId = useId();\n\n  return (\n         <form onSubmit={handleSubmit} className={css.form}>\n            <label htmlFor={inputNameId} className={css.label}>Name</label>\n            <input className={css.input}\n                 type=\"text\"\n                 name=\"name\"\n                 value={state.name}\n                 id={inputNameId}\n                 onChange={handleChange}\n                 pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                 title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                 placeholder=\"Example: Kate Ross\"\n                 required\n            />\n            \n            <label htmlFor={inputNumberId} className={css.label}>Phone</label>\n            <input className={css.input}\n                 type=\"tel\"\n                 name=\"number\"\n                 value={state.number}\n                 id={inputNumberId}\n                 onChange={handleChange}\n                 pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                 title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                 placeholder=\"Example: 123-456-789\"\n                 required\n            />\n           \n            <button type=\"submit\" className={css.addButton}>Add contact</button>\n        </form>\n            );\n}\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__M1r-e\",\"contact\":\"ContactsList_contact__cOtGD\",\"deleteButton\":\"ContactsList_deleteButton__iKpRP\"};","export const selectAllContacts = store => store.contacts;\n\nexport const selectFilteredContacts = store => {\n    const {contacts, filter} = store;\n    const {items} = contacts;\n    if(!filter) {\n        return items;\n      }\n      const normalizedFilter = filter.toLowerCase();\n\n       const filteredContacts = contacts.items.filter(({ name, number }) => {\n        const normalizedName = name.toLowerCase();\n\n        return (number.includes(normalizedFilter) || normalizedName.includes(normalizedFilter))\n    });\n\n    return filteredContacts;\n};","import css from './ContactsList.module.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\nimport { selectFilteredContacts } from '../../redux/contacts/contacts-selectors';\n\nconst ContactsList = () => {\nconst items = useSelector(selectFilteredContacts);\n\nconst dispatch = useDispatch();\n\nconst elements = items.map(({id, name, number}) => {\n      return (\n           <li key={id}\n               className={css.contact}\n              >\n             {name}: {number}\n             <button type='button'\n              className={css.deleteButton}\n              onClick={() => dispatch(deleteContact(id))}>Delete\n             </button>\n           </li>\n      )\n     })\n     \n\n return (\n    <>\n    <ul className={css.list}>\n       {elements}\n    </ul>\n    </> \n )\n}\n\n\nexport default ContactsList;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\"};","import { useId } from 'react';\nimport css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filter-slice';\n\n\n\n\nconst Filter = () => {\n  \n  const dispatch = useDispatch();\n  const changeFilter = (e) => dispatch(setFilter(e.currentTarget.value));\n  \n  const inputSearchId = useId();\n  \n  return (\n    <div>\n      <label htmlFor={inputSearchId} className={css.label}>Search by name</label>\n      <input type='text' onChange={changeFilter} id={inputSearchId}/>\n    </div>\n  )\n}\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MyContacts_container__lnStx\"};","import { useEffect } from 'react';\nimport Form from '../Form/Form';\nimport ContactsList from '../Contacts/ContactsList';\nimport Filter from '../Filter/Filter';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectAllContacts } from '../../redux/contacts/contacts-selectors';\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\nimport css from './MyContacts.module.css';\n\nconst MyContacts = () => { \n  const contacts = useSelector(selectAllContacts);\n  const {items, isLoading, error} = contacts;\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(fetchContacts())\n  },[dispatch])\n  \n    return (\n      <div className={css.container}>\n         <Form />\n         <h3>Contacts</h3>\n         <Filter name='filter' />\n         {error && <p>{error}</p>}\n         {isLoading && <p>...Loading</p>}\n         {items.length === 0 ?  'There is no contacts yet. Add first one :)' : <ContactsList />}\n      </div>\n     );             \n };\n\n\nexport default MyContacts;","import MyContacts from \"components/MyContacts/MyContacts\";\n\nconst MyContactsPage = () => {\n    return (\n        <>\n            <MyContacts />\n        </>\n    )\n}\n\nexport default MyContactsPage;"],"names":["INITIAL_STATE","name","number","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","dispatch","useDispatch","handleChange","e","_e$target","target","value","_defineProperty","reset","inputNameId","useId","inputNumberId","_jsxs","onSubmit","data","preventDefault","addContact","className","css","children","_jsx","htmlFor","type","id","onChange","pattern","title","placeholder","required","selectAllContacts","store","contacts","selectFilteredContacts","filter","items","normalizedFilter","toLowerCase","_ref","normalizedName","includes","useSelector","elements","map","onClick","deleteContact","_Fragment","inputSearchId","setFilter","currentTarget","isLoading","error","useEffect","fetchContacts","Form","Filter","length","ContactsList","MyContacts"],"sourceRoot":""}